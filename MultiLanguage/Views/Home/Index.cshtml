@{
    ViewBag.Title = "Asp.net Mvc Multi Language - Globalization and Localization";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var webconfig = "<globalization uiCulture='auto' culture='auto' />";
}
<h1 style="color:red;width:100%;text-align:center">@Example.SelectedLanguage @Example.HelloWorld</h1>
<h1>@ViewBag.Title</h1>
<div class="alert alert-info">Bu örnek çoklu dilli web siteleri geliştirmek amaçlı yapılmıştır.</div>
<h4>Çok dilli web siteleri geliştirmek için yapmanız gerekenleri aşağıdadır</h4>
<p>Çok dilli uygulamaları <b>Resource</b> dosyaları ile sağlanmaktadır ve sadece siteyi görüntüleyen kişinin bilgisayarında sağlanır. Multi language için yapacağımız örnek sadece arayüzler için geçerli olacaktır. Dolayısıyla hangi dilin görüntülenmesi gerektiği bilgisini cookie den okuyup System.Threading.Thread.CurrentThread.CurrentCulture bölümüne seçili dili set edeceğiz. Görüntülenen verilerin de farklı dillerde olmasını istiyorsanız veri tabanı yapınıza buna göre konfigüre etmeniz gerekmektedir. <br />Örneğimiz üç farklı dil (Türkçe, İngilizce, Almanca) destekleyecektir. Üç farklı dilin çalışabilmesi için projemize <b>4</b> adet Resource dosyası ekleyeceğiz.<ul><li>Example.resx (Default Dil)</li><li>Example<b style="color:red">.tr-TR</b>.resx (Türkçe)</li><li>Example<b style="color:red">.en-US</b>.resx (İngilizce)</li><li>Example<b style="color:red">.de-DE</b>.resx (Almanca)</li></ul> <br />Bunun sebebi; uygulamamız ilk çalıştığında, herhangi bir dil seçilmediğinde görüntülenecek olan "Default" dilin görüntülenmesi içindir.</p>
<p>Resource dosyalarının çalışma prensibi Key - Value mantığındadır. Her kelime / cümle için bir anahtar belirlenir ve bu anahtara karşılık gelecek anlam yazılır.</p>

<ul>
    <li>Resource Dosyalarını ekleyiniz. Resource dosyalarının isimleri aynı olmalıdır. Örneğin; Example.resx. Bu dosya default dil için oluşturulur. Sonuna ekleyeceğiniz uzantı ile hangi dilde çalışacağını belirtmiş oluyoruz.</li>
    <li>Resource dosyalarının içine giriniz ve üst bölümde bulunan Access Modifier bölümünü <b>Public</b> olarak işaretleyiniz</li>
    <li>Her resource dosyalarının içinde sol üst bölümde bulunan <b>Add Resource</b> düğmesine tıklayarak yeni bir name-value oluşturunuz.
        .<ul><li>Example.resx dosyasında; Name: HelloWorld, Value: Merhaba Dünya</li>
        <li>Example<b style="color:red">.tr-TR</b>.resx  dosyasında; Name: HelloWorld, Value: Merhaba Dünya</li>
        <li>Example<b style="color:red">.en-US</b>.resx  dosyasında; Name: HelloWorld, Value: Hello World</li>
        <li>Example<b style="color:red">.de-DE</b>.resx  dosyasında; Name: HelloWorld, Value: Hallo Welt</li></ul> 
    </li>
    <li>Web.config dosyası içerisindeki System.Web böümünün içerisine <b>@webconfig</b> etiketini ekleyin.</li>
    <li>Global.asax dosyasına <h5>protected void Application_BeginRequest(object sender, EventArgs e)</h5> methodunu ekleyin ve aşağıdaki kodları bu methodun içerisine yapıştırın
    <br />
        <p>var lang = "tr-TR"; // Default dil</p>
        <p>var cookie = Request.Cookies["MultiLanguageExample"];</p>
        <p>if (cookie != null && cookie.Value != null)</p>
        <p>lang = cookie.Value;</p>
        <p> System.Threading.Thread.CurrentThread.CurrentUICulture = System.Globalization.CultureInfo.GetCultureInfo(lang);</p>
        <p>System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(lang);</p>
    </li>
    <li>Web Sayfanız içerisinde hangi anahtarın görüntülenmesini istiyorsanız bunu belirtin. Örneğin; @@Example.HelloWorld</li>
    <li>Farklı bir dil görüntülemek için /Home/ChangeLanguage actionresult bölümünü call edeceğiz. Parametre olarak görüntülemek istediğimiz dilin uzantısını göndermemiz gerekiyor. ChangeLanguage ActionResult bölümünün içerisindeki kodlar aşağıdaki gibi olmalıdır.
        <p>HttpCookie cookie;</p>
        <p>cookie = new HttpCookie("MultiLanguageExample");</p>
        <p>Thread.CurrentThread.CurrentCulture =new CultureInfo(language);</p>
        <p>cookie.Value = language;</p>
        <p>Response.SetCookie(cookie);</p>
        <p>if (Request.UrlReferrer != null) return Redirect(Request.UrlReferrer.LocalPath);</p>
        <p>return Redirect("/Home/Index");</p>
    </li>
</ul>


